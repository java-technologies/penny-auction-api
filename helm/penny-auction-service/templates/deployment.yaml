apiVersion: apps/v1beta2
kind: Deployment
metadata:
  name: {{ template "penny-auction-service.fullname" . }}
  labels:
    app.kubernetes.io/name: {{ template "penny-auction-service.name" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    helm.sh/chart: {{ .Chart.Name }}-{{ .Chart.Version }}
    {{- with .Values.labels }}
{{ toYaml . | indent 4 }}
    {{- end }}
spec:
  replicas: {{ .Values.replicaCount }}
  {{- with .Values.strategy }}
  strategy:
{{ toYaml . | indent 4 }}
  {{- end }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ template "penny-auction-service.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ template "penny-auction-service.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
        {{- with .Values.labels }}
{{ toYaml . | indent 8 }}
        {{- end }}
      {{- with .Values.podAnnotations }}
      annotations:
{{ toYaml .| indent 8 }}
      {{- end }}
    spec:
      containers:
      - name: {{ .Chart.Name }}
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        {{- with .Values.image.pullPolicy }}          
        imagePullPolicy: {{ . }}
        {{- end }}
        env:
        - name: RSA_PUBLIC_KEY
          value: {{ .Values.rsaPublicKey }}
        - name: DB_URL
          value: "jdbc:mysql://penny-auction-service-db-mysql:3306/{{ .Values.database.name }}"
        - name: DB_USER
          value: {{ .Values.database.user }}
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ .Values.database.credentials }}
              key: mysql-password
        resources:
{{ toYaml .Values.resources | indent 10 }}
        ports:
          - name: http
            containerPort: 8080
            protocol: TCP
        {{- with .Values.health }}          
        livenessProbe:
          httpGet:
            scheme: HTTP
            path: {{ .path }}
            port: http
        readinessProbe:
          httpGet:
            scheme: HTTP
            path: {{ .path }}
            port: http
        {{- end }}
